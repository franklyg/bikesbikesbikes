{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Layout from './layout';\nimport Container from './container';\nimport Head from 'next/head';\nimport CoverImage from './cover-image';\nimport { RichText } from 'prismic-reactjs';\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport LazyLoad from 'react-lazyload'; // <LazyLoad key={cardIndex} height={200} offset={[-100, 0]}>\n// </LazyLoad>\n\nvar ProductCard = /*#__PURE__*/function (_React$Component) {\n  _inherits(ProductCard, _React$Component);\n\n  var _super = _createSuper(ProductCard);\n\n  function ProductCard() {\n    _classCallCheck(this, ProductCard);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ProductCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          posts = _this$props.posts,\n          props = _objectWithoutProperties(_this$props, [\"posts\"]);\n\n      var allPostContent = posts.map(function (post, postIndex) {\n        if (post.node._meta.uid === props.uidName) {\n          var allPostContentItems = post.node.body.map(function (slice, index) {\n            // Product Card\n            if (slice.__typename === 'Product_pageBodyProduct_card') {\n              var productCardItem = [slice].map(function (productRow, productRowIndex) {\n                return __jsx(\"div\", {\n                  className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 md:col-gap-4 lg:col-gap-4 xl:col-gap-8 row-gap-4 md:row-gap-4 lg:row-gap-4 xl:row-gap-8 xl:mb-8 lg:mb-4 md:mb-4 mb-4\",\n                  key: productRowIndex\n                }, productRow.fields.map(function (card, cardIndex) {\n                  return __jsx(\"a\", {\n                    href: card.product_card_link.url,\n                    className: \"shadow-small product-card hover:shadow-medium transition-shadow duration-200 border-solid border-2 border-gray-100 \",\n                    key: cardIndex,\n                    target: \"_blank\"\n                  }, __jsx(LazyLoad, {\n                    key: cardIndex,\n                    height: 200,\n                    offset: 100\n                  }, __jsx(CSSTransition, {\n                    key: cardIndex,\n                    \"in\": true,\n                    appear: true,\n                    timeout: 1000,\n                    classNames: \"transition\"\n                  }, __jsx(\"div\", null, __jsx(\"div\", {\n                    className: \"product-card-image h-64 md:h-56 lg:h-40 xl:h-64 pb-6\",\n                    style: {\n                      background: 'url(' + card.product_card_image.url + ')',\n                      backgroundSize: 'cover',\n                      backgroundPosition: 'center'\n                    }\n                  }), __jsx(\"h3\", {\n                    className: \"product-name px-4 text-1xl py-2 font-poppins\"\n                  }, card.product_card_title[0].text.length > 40 ? card.product_card_title[0].text.substring(0, 40) + '...' : card.product_card_title[0].text), __jsx(\"div\", {\n                    className: \"px-4 pb-2 font-poppins\"\n                  }, __jsx(\"div\", {\n                    className: \"product-price text-2xl font-bold pt-3 border-t-2 border-gray-200\"\n                  }, __jsx(RichText, {\n                    render: card.product_card_price\n                  })))))), __jsx(\"div\", {\n                    className: \"buy-tag font-bold py-2 px-4 font-abel rounded-bl-lg grid grid-cols-2 items-center justify-end  hidden md:flex\"\n                  }, __jsx(\"span\", {\n                    className: \"col-span-1\"\n                  }, \"View Now\"), __jsx(\"svg\", {\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    className: \"arrow w-4 h-4 col-span-1\",\n                    viewBox: \"0 0 24 24\"\n                  }, __jsx(\"path\", {\n                    d: \"M17.428 5h-17.428l6.616 7-6.616 7h17.428l6.572-7z\"\n                  }))));\n                }));\n              });\n              return productCardItem;\n            } // Product Specific\n            else if (slice.__typename === 'Product_pageBodyProduct_page_specific_link') {\n                var productSpecificItem = slice.fields.map(function (pageSpecific, pageSpecificIndex) {\n                  return __jsx(LazyLoad, {\n                    key: pageSpecificIndex,\n                    height: 200,\n                    offset: 100\n                  }, __jsx(CSSTransition, {\n                    key: pageSpecificIndex,\n                    \"in\": true,\n                    appear: true,\n                    timeout: 1000,\n                    classNames: {\n                      appear: \"transition-appear\",\n                      appearActive: \"transition-appear-active\"\n                    }\n                  }, __jsx(\"a\", {\n                    href: \"\".concat(RichText.asText(pageSpecific.product_page_link)),\n                    className: \"specific-product-item grid md:grid-cols-2 grid-cols-1 flex items-center shadow-small hover:shadow-medium transition-shadow duration-200 xl:mb-8 lg:mb-4 md:mb-4 mb-4\",\n                    key: pageSpecificIndex\n                  }, __jsx(\"div\", {\n                    className: \"product-card-image lg:h-110 sm:h-64 h-64\",\n                    style: {\n                      background: 'url(' + pageSpecific.product_image.url + ')'\n                    }\n                  }), __jsx(\"div\", {\n                    className: \"specific-item-content text-6xl leading-snug p-4 text-center flex grid grid-cols-8 items-center justify-end lg:h-110 sm:h-64 h-64\"\n                  }, __jsx(\"div\", {\n                    className: \"md:col-span-6 col-span-8 font-poppins font-bold\"\n                  }, __jsx(RichText, {\n                    render: pageSpecific.product_page_title\n                  })), __jsx(\"svg\", {\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    className: \"arrow w-34 h-16 md:col-span-1 col-span-8 md:block hidden\",\n                    viewBox: \"0 0 24 24\"\n                  }, __jsx(\"path\", {\n                    d: \"M17.428 5h-17.428l6.616 7-6.616 7h17.428l6.572-7z\"\n                  }))))));\n                });\n                return productSpecificItem;\n              } else if (slice.__typename === 'Product_pageBodyPage_online_advert') {\n                var onlineAdvert = slice.fields.map(function (advertElem, advertElemIndex) {\n                  return __jsx(LazyLoad, {\n                    key: advertElemIndex,\n                    height: 200,\n                    offset: (100, 0)\n                  }, __jsx(CSSTransition, {\n                    key: advertElemIndex,\n                    \"in\": true,\n                    appear: true,\n                    timeout: 1000,\n                    classNames: \"transition\"\n                  }, __jsx(\"div\", {\n                    className: \"flex justify-center xl:mb-8 lg:mb-4 md:mb-4 mb-4\",\n                    key: advertElemIndex\n                  }, __jsx(\"a\", {\n                    href: advertElem.page_advert_link.url,\n                    className: \"online-advert shadow-small\",\n                    key: advertElemIndex,\n                    target: \"_blank\"\n                  }, __jsx(CoverImage, {\n                    url: advertElem.page_advert_image.url\n                  })))));\n                });\n                return onlineAdvert;\n              } else {\n                // Return null by default\n                return null;\n              }\n          }); // Return allPostContent data\n\n          return allPostContentItems;\n        }\n      }); // Display everything\n\n      return __jsx(\"div\", {\n        className: \"blog-content\"\n      }, allPostContent);\n    }\n  }]);\n\n  return ProductCard;\n}(React.Component);\n\nexport default ProductCard;","map":null,"metadata":{},"sourceType":"module"}