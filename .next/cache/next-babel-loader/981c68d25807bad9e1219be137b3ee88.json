{"ast":null,"code":"var _jsxFileName = \"/Users/default/Projects/aff/bikesbikesbikes/pages/posts/[slug].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nimport ErrorPage from 'next/error';\nimport Container from '../../components/container';\nimport PostBody from '../../components/post-body';\nimport MoreStories from '../../components/more-stories';\nimport Header from '../../components/header';\nimport PostHeader from '../../components/post-header';\nimport SectionSeparator from '../../components/section-separator';\nimport Layout from '../../components/layout';\nimport PostTitle from '../../components/post-title';\nimport { CMS_NAME } from '../../lib/constants';\nexport var __N_SSG = true;\nexport default function Post(_ref) {\n  var _post$_meta;\n\n  var post = _ref.post,\n      morePosts = _ref.morePosts,\n      preview = _ref.preview;\n  var router = useRouter();\n  console.log(router, post, _meta, uid);\n\n  if (!router.isFallback && !(post === null || post === void 0 ? void 0 : (_post$_meta = post._meta) === null || _post$_meta === void 0 ? void 0 : _post$_meta.uid)) {\n    return __jsx(ErrorPage, {\n      statusCode: 404,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return __jsx(Layout, {\n    preview: preview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }), router.isFallback ? __jsx(PostTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, \"Loading\\u2026\") : __jsx(React.Fragment, null, __jsx(\"article\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, post.title[0].text, \" | Next.js Blog Example with \", CMS_NAME), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: post.coverimage.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  })), __jsx(PostHeader, {\n    title: post.title,\n    coverImage: post.coverimage,\n    date: post.date,\n    author: post.author,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }), __jsx(PostBody, {\n    content: post.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  })), __jsx(SectionSeparator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), morePosts && morePosts.length > 0 && __jsx(MoreStories, {\n    posts: morePosts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/default/Projects/aff/bikesbikesbikes/pages/posts/[slug].js"],"names":["useRouter","Head","ErrorPage","Container","PostBody","MoreStories","Header","PostHeader","SectionSeparator","Layout","PostTitle","CMS_NAME","Post","post","morePosts","preview","router","console","log","_meta","uid","isFallback","title","text","coverimage","url","date","author","content","length"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,QAAT,QAAyB,qBAAzB;;AAEA,eAAe,SAASC,IAAT,OAA4C;AAAA;;AAAA,MAA5BC,IAA4B,QAA5BA,IAA4B;AAAA,MAAtBC,SAAsB,QAAtBA,SAAsB;AAAA,MAAXC,OAAW,QAAXA,OAAW;AACzD,MAAMC,MAAM,GAAGhB,SAAS,EAAxB;AACAiB,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAAoBH,IAApB,EAA0BM,KAA1B,EAAiCC,GAAjC;;AACA,MAAI,CAACJ,MAAM,CAACK,UAAR,IAAsB,EAACR,IAAD,aAACA,IAAD,sCAACA,IAAI,CAAEM,KAAP,gDAAC,YAAaC,GAAd,CAA1B,EAA6C;AAC3C,WAAO,MAAC,SAAD;AAAW,MAAA,UAAU,EAAE,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEL,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGC,MAAM,CAACK,UAAP,GACC,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,GAGC,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,IAAI,CAACS,KAAL,CAAW,CAAX,EAAcC,IADjB,mCACoDZ,QADpD,CADF,EAIE;AAAM,IAAA,QAAQ,EAAC,UAAf;AAA0B,IAAA,OAAO,EAAEE,IAAI,CAACW,UAAL,CAAgBC,GAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,EAOE,MAAC,UAAD;AACE,IAAA,KAAK,EAAEZ,IAAI,CAACS,KADd;AAEE,IAAA,UAAU,EAAET,IAAI,CAACW,UAFnB;AAGE,IAAA,IAAI,EAAEX,IAAI,CAACa,IAHb;AAIE,IAAA,MAAM,EAAEb,IAAI,CAACc,MAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAaE,MAAC,QAAD;AAAU,IAAA,OAAO,EAAEd,IAAI,CAACe,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF,EAgBE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,EAiBGd,SAAS,IAAIA,SAAS,CAACe,MAAV,GAAmB,CAAhC,IACC,MAAC,WAAD;AAAa,IAAA,KAAK,EAAEf,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBJ,CALJ,CADF,CADF;AAgCD","sourcesContent":["import { useRouter } from 'next/router'\nimport Head from 'next/head'\nimport ErrorPage from 'next/error'\nimport Container from '../../components/container'\nimport PostBody from '../../components/post-body'\nimport MoreStories from '../../components/more-stories'\nimport Header from '../../components/header'\nimport PostHeader from '../../components/post-header'\nimport SectionSeparator from '../../components/section-separator'\nimport Layout from '../../components/layout'\nimport { getAllPostsWithSlug, getPostAndMorePosts } from '../../lib/api'\nimport PostTitle from '../../components/post-title'\nimport { CMS_NAME } from '../../lib/constants'\n\nexport default function Post({ post, morePosts, preview }) {\n  const router = useRouter()\n  console.log(router, post, _meta, uid)\n  if (!router.isFallback && !post?._meta?.uid) {\n    return <ErrorPage statusCode={404} />\n  }\n\n  return (\n    <Layout preview={preview}>\n      <Container>\n        <Header />\n        {router.isFallback ? (\n          <PostTitle>Loadingâ€¦</PostTitle>\n        ) : (\n          <>\n            <article>\n              <Head>\n                <title>\n                  {post.title[0].text} | Next.js Blog Example with {CMS_NAME}\n                </title>\n                <meta property=\"og:image\" content={post.coverimage.url} />\n              </Head>\n              <PostHeader\n                title={post.title}\n                coverImage={post.coverimage}\n                date={post.date}\n                author={post.author}\n              />\n              <PostBody content={post.content} />\n            </article>\n            <SectionSeparator />\n            {morePosts && morePosts.length > 0 && (\n              <MoreStories posts={morePosts} />\n            )}\n          </>\n        )}\n      </Container>\n    </Layout>\n  )\n}\n\nexport async function getStaticProps({ params, preview = false, previewData }) {\n  const data = await getPostAndMorePosts(params.slug, previewData)\n\n  return {\n    props: {\n      preview,\n      post: data?.post ?? null,\n      morePosts: data?.morePosts ?? [],\n    },\n  }\n}\n\nexport async function getStaticPaths() {\n  const allPosts = await getAllPostsWithSlug()\n  return {\n    paths: allPosts?.map(({ node }) => `/posts/${node._meta.uid}`) || [],\n    fallback: true,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}