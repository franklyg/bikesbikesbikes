{"ast":null,"code":"var _jsxFileName = \"/Users/francesco/Projects/bikesbikesbikes/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/layout';\nimport Container from '../components/container';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport CoverImage from '../components/cover-image';\nimport { RichText } from 'prismic-reactjs';\nimport HeroImage from '../components/hero-image';\nimport { linkResolver } from '../prismic-config';\nimport { indexPageQuery } from '../lib/api';\n\nclass ProductCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      document: props\n    };\n  }\n\n  render() {\n    if (this.state.document) {\n      const document = this.state.document;\n      const indexPageItems = document.allPosts[0].node.body.map(function (slice, index) {\n        // Product Card\n        if (slice.__typename === 'Index_pageBodyProduct_card') {\n          const productCardItem = [slice].map(function (productRow, productRowIndex) {\n            return __jsx(\"div\", {\n              className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 col-gap-4 row-gap-4 md:row-gap-6 mb-6\",\n              key: productRowIndex,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 15\n              }\n            }, productRow.fields.map(function (card, cardIndex) {\n              return __jsx(Link, {\n                href: \"${card.product_card_link.url}\",\n                as: card.product_card_link.url,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 21\n                }\n              }, __jsx(\"a\", {\n                className: \"shadow-small product-card hover:shadow-medium transition-shadow duration-200 border-solid border-2 border-gray-100 \",\n                key: cardIndex,\n                target: \"_blank\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 23\n                }\n              }, __jsx(\"div\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 25\n                }\n              }, __jsx(\"div\", {\n                className: \"product-card-image h-64 md:h-56 lg:h-40 xl:h-64 pb-6\",\n                style: {\n                  background: 'url(' + card.product_card_image.url + ')',\n                  backgroundSize: 'cover',\n                  backgroundPosition: 'center'\n                },\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 27\n                }\n              }), __jsx(\"h3\", {\n                className: \"product-name px-4 text-2xl py-2 font-poppins\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 27\n                }\n              }, __jsx(RichText, {\n                render: card.product_card_title,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 29\n                }\n              })), __jsx(\"div\", {\n                className: \"px-4 pb-2 font-poppins\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 27\n                }\n              }, __jsx(\"p\", {\n                className: \"product-price text-2xl font-bold pt-3 border-t-2 border-gray-200\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 29\n                }\n              }, __jsx(RichText, {\n                render: card.product_card_price,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 31\n                }\n              })))), __jsx(\"div\", {\n                className: \"buy-tag font-bold py-2 px-4 font-abel rounded-bl-lg grid grid-cols-2 items-center justify-end hidden md:flex\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 25\n                }\n              }, __jsx(\"span\", {\n                className: \"col-span-1\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 27\n                }\n              }, \"View Now\"), __jsx(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                className: \"arrow w-4 h-4 col-span-1\",\n                viewBox: \"0 0 24 24\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 27\n                }\n              }, __jsx(\"path\", {\n                d: \"M17.428 5h-17.428l6.616 7-6.616 7h17.428l6.572-7z\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 124\n                }\n              })))));\n            }));\n          });\n          return productCardItem; // Product Specific\n        } else if (slice.__typename === 'Index_pageBodyProduct_page_specific_link') {\n          const productSpecificItem = slice.fields.map(function (pageSpecific, pageSpecificIndex) {\n            return __jsx(Link, {\n              href: \"${pageSpecific.product_page_link}\",\n              as: `${RichText.asText(pageSpecific.product_page_link)}`,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }\n            }, __jsx(\"a\", {\n              className: \"specific-product-item grid md:grid-cols-2 grid-cols-1 flex items-center shadow-small hover:shadow-medium transition-shadow duration-200 mb-6\",\n              key: pageSpecificIndex,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }\n            }, __jsx(\"div\", {\n              className: \"product-card-image lg:h-110 sm:h-64 h-64\",\n              style: {\n                background: 'url(' + pageSpecific.product_image.url + ')'\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 21\n              }\n            }), __jsx(\"div\", {\n              className: \"specific-item-content text-6xl leading-snug p-4 text-center flex grid grid-cols-8 items-center justify-end lg:h-110 sm:h-64 h-64\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 21\n              }\n            }, __jsx(\"div\", {\n              className: \"md:col-span-6 col-span-8 font-poppins font-bold\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 23\n              }\n            }, __jsx(RichText, {\n              render: pageSpecific.product_page_title,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 25\n              }\n            })), __jsx(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              className: \"arrow w-34 h-16 md:col-span-1 col-span-8 md:block hidden\",\n              viewBox: \"0 0 24 24\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 23\n              }\n            }, __jsx(\"path\", {\n              d: \"M17.428 5h-17.428l6.616 7-6.616 7h17.428l6.572-7z\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 152\n              }\n            })))));\n          });\n          return productSpecificItem; // Product Title\n        } else if (slice.__typename === 'Index_pageBodyPage_title') {\n          const pageTitleItem = slice.fields.map(function (pageTitle, pageTitleIndex) {\n            return __jsx(\"h2\", {\n              className: \"pb-8 font-bold font-abel text-4xl md:text-5xl\",\n              key: pageTitleIndex,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }\n            }, __jsx(RichText, {\n              render: pageTitle.page_title,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }\n            }));\n          });\n          return pageTitleItem; // Online Advert\n        } else if (slice.__typename === 'Index_pageBodyOnline_advert') {\n          const onlineAdvert = slice.fields.map(function (advertElem, advertElemIndex) {\n            return __jsx(\"div\", {\n              className: \"flex justify-center\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }\n            }, __jsx(Link, {\n              href: \"${advertElem.advert_link.url}\",\n              as: advertElem.advert_link.url,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }\n            }, __jsx(\"a\", {\n              className: \"online-advert\",\n              key: advertElemIndex,\n              target: \"_blank\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 21\n              }\n            }, __jsx(CoverImage, {\n              url: advertElem.advert_image.url,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 23\n              }\n            }))));\n          });\n          return onlineAdvert;\n        } else {\n          // Return null by default\n          return null;\n        }\n      });\n      return __jsx(\"div\", {\n        className: \"blog-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }\n      }, __jsx(React.Fragment, null, __jsx(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }\n      }, __jsx(HeroImage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }\n      }), __jsx(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }\n      }, indexPageItems))));\n    } else {\n      return null;\n    }\n  }\n\n}\n\nexport default ProductCard;\nexport async function getStaticProps({\n  preview = false,\n  previewData\n}) {\n  const allPosts = await indexPageQuery(previewData);\n  return {\n    props: {\n      preview,\n      allPosts\n    }\n  };\n}","map":{"version":3,"sources":["/Users/francesco/Projects/bikesbikesbikes/pages/index.js"],"names":["Layout","Container","Head","Link","CoverImage","RichText","HeroImage","linkResolver","indexPageQuery","ProductCard","React","Component","constructor","props","state","document","render","indexPageItems","allPosts","node","body","map","slice","index","__typename","productCardItem","productRow","productRowIndex","fields","card","cardIndex","product_card_link","url","background","product_card_image","backgroundSize","backgroundPosition","product_card_title","product_card_price","productSpecificItem","pageSpecific","pageSpecificIndex","asText","product_page_link","product_image","product_page_title","pageTitleItem","pageTitle","pageTitleIndex","page_title","onlineAdvert","advertElem","advertElemIndex","advert_link","advert_image","getStaticProps","preview","previewData"],"mappings":"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","sourcesContent":["import Layout from '../components/layout'\nimport Container from '../components/container'\nimport Head from 'next/head'\nimport Link from 'next/link'\nimport CoverImage from '../components/cover-image'\nimport {RichText} from 'prismic-reactjs';\nimport HeroImage from '../components/hero-image'\n\nimport { linkResolver } from '../prismic-config';\nimport { indexPageQuery } from '../lib/api'\n\nclass ProductCard extends React.Component{\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      document: props\n    };\n  }\n\n  render() {\n    if (this.state.document) {\n      const document = this.state.document;\n\n      const indexPageItems = document.allPosts[0].node.body.map(function(slice, index){\n\n        // Product Card\n        if (slice.__typename === 'Index_pageBodyProduct_card') {\n          const productCardItem = [slice].map(function(productRow, productRowIndex){\n\n            return(\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 col-gap-4 row-gap-4 md:row-gap-6 mb-6\" key={productRowIndex}>\n                {productRow.fields.map(function(card, cardIndex){\n                  return(\n                    <Link href=\"${card.product_card_link.url}\" as={card.product_card_link.url}>\n                      <a className=\"shadow-small product-card hover:shadow-medium transition-shadow duration-200 border-solid border-2 border-gray-100 \" key={cardIndex} target=\"_blank\">\n                        <div>\n                          <div className=\"product-card-image h-64 md:h-56 lg:h-40 xl:h-64 pb-6\" style={{background: 'url('+card.product_card_image.url+')', backgroundSize: 'cover', backgroundPosition: 'center' }}>\n                          </div>\n                          <h3 className=\"product-name px-4 text-2xl py-2 font-poppins\">\n                            <RichText render={card.product_card_title} />\n                          </h3>\n                          <div className=\"px-4 pb-2 font-poppins\">\n                            <p className=\"product-price text-2xl font-bold pt-3 border-t-2 border-gray-200\">\n                              <RichText render={card.product_card_price} />\n                            </p>\n                          </div>\n                        </div>\n                        <div className=\"buy-tag font-bold py-2 px-4 font-abel rounded-bl-lg grid grid-cols-2 items-center justify-end hidden md:flex\">\n                          <span className=\"col-span-1\">View Now</span>\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"arrow w-4 h-4 col-span-1\" viewBox=\"0 0 24 24\"><path d=\"M17.428 5h-17.428l6.616 7-6.616 7h17.428l6.572-7z\"/></svg>\n                        </div>\n                      </a>\n                    </Link>\n                  )\n                })}\n              </div>\n            )\n\n          })\n          return productCardItem;\n\n          // Product Specific\n        } else if(slice.__typename === 'Index_pageBodyProduct_page_specific_link') {\n            const productSpecificItem = slice.fields.map(function(pageSpecific, pageSpecificIndex){\n              return (\n                <Link href=\"${pageSpecific.product_page_link}\" as={`${RichText.asText(pageSpecific.product_page_link)}`}>\n                  <a className=\"specific-product-item grid md:grid-cols-2 grid-cols-1 flex items-center shadow-small hover:shadow-medium transition-shadow duration-200 mb-6\" key={pageSpecificIndex}>\n                    <div className=\"product-card-image lg:h-110 sm:h-64 h-64\" style={{background: 'url('+pageSpecific.product_image.url +')'}}>\n                    </div>\n                    <div className=\"specific-item-content text-6xl leading-snug p-4 text-center flex grid grid-cols-8 items-center justify-end lg:h-110 sm:h-64 h-64\">\n                      <div className=\"md:col-span-6 col-span-8 font-poppins font-bold\">\n                        <RichText render={pageSpecific.product_page_title}/>\n                      </div>\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"arrow w-34 h-16 md:col-span-1 col-span-8 md:block hidden\" viewBox=\"0 0 24 24\"><path d=\"M17.428 5h-17.428l6.616 7-6.616 7h17.428l6.572-7z\"/></svg>\n                    </div>\n                  </a>\n                </Link>\n              );\n            });\n            return productSpecificItem;\n\n            // Product Title\n          } else if(slice.__typename === 'Index_pageBodyPage_title') {\n\n            const pageTitleItem = slice.fields.map(function(pageTitle, pageTitleIndex){\n              return (\n                <h2 className=\"pb-8 font-bold font-abel text-4xl md:text-5xl\" key={pageTitleIndex}>\n                  <RichText render={pageTitle.page_title} />\n                </h2>\n              );\n            });\n\n            return pageTitleItem;\n\n            // Online Advert\n          }else if(slice.__typename === 'Index_pageBodyOnline_advert') {\n            const onlineAdvert = slice.fields.map(function(advertElem, advertElemIndex){\n              return (\n                <div className='flex justify-center'>\n                  <Link href=\"${advertElem.advert_link.url}\" as={advertElem.advert_link.url}>\n                    <a className=\"online-advert\" key={advertElemIndex} target=\"_blank\">\n                      <CoverImage\n                        url={advertElem.advert_image.url}\n                      />\n                    </a>\n                  </Link>\n                </div>\n              );\n            });\n            return onlineAdvert;\n          }\n          else {\n            // Return null by default\n            return null;\n          }\n        })\n      return (\n        <div className=\"blog-content\">\n          <>\n            <Layout>\n              <HeroImage />\n              <Container>\n                {indexPageItems}\n              </Container>\n            </Layout>\n          </>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default ProductCard;\n\nexport async function getStaticProps({ preview = false, previewData }) {\n  const allPosts = await indexPageQuery(previewData)\n  return {\n    props: { preview, allPosts },\n  }\n}\n"]},"metadata":{},"sourceType":"module"}